/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}@font-face{font-family:'Droid Sans';src:url("../fonts/DroidSans-Bold-webfont.eot");src:url("../fonts/DroidSans-Bold-webfont.eot?#iefix") format("embedded-opentype"),url("../fonts/DroidSans-Bold-webfont.woff2") format("woff2"),url("../fonts/DroidSans-Bold-webfont.woff") format("woff"),url("../fonts/DroidSans-Bold-webfont.ttf") format("truetype"),url("../fonts/DroidSans-Bold-webfont.svg#droid_sansbold") format("svg");font-weight:700;font-style:normal}@font-face{font-family:'Droid Sans';src:url("../fonts/DroidSans-webfont.eot");src:url("../fonts/DroidSans-webfont.eot?#iefix") format("embedded-opentype"),url("../fonts/DroidSans-webfont.woff2") format("woff2"),url("../fonts/DroidSans-webfont.woff") format("woff"),url("../fonts/DroidSans-webfont.ttf") format("truetype"),url("../fonts/DroidSans-webfont.svg#droid_sansregular") format("svg");font-weight:400;font-style:normal}.clearfix:after{display:block;content:"";clear:both}img{width:100%;height:auto;vertical-align:middle}a{text-decoration:none}.heading{padding-bottom:45px}.heading h2{font:32px 'Oswald', sans-serif;text-transform:uppercase;color:#333;line-height:0}.heading h3{margin-bottom:0;font:32px 'Great Vibes', cursive;text-transform:capitalize;color:#df001f;line-height:0.5}.cantus{font:28px 'Great Vibes', cursive;color:#df001f}.button{padding:21px 44px 20px;border-radius:50px;font:700 12px 'Droid Sans', sans-serif;text-transform:uppercase}.white-button{background:#fff;color:#df001f}.red-button{background:#df001f;color:#fff}.white-button:hover,.red-button:hover{background:#9e3c4a;transition:all 0.5s ease}.arrow{margin-top:0;margin-bottom:10px;padding-left:0;list-style:none;text-align:right}.arrow li{display:inline-block}.arrow li a{display:flex;align-items:center;width:35px;height:35px;background:#df001f;color:#fff}.arrow li a .fa-angle-right,.arrow li a .fa-angle-left{margin:0 auto;font-size:24px}.container{max-width:1170px;width:100%;margin:0 auto}.pull-left{float:left;width:65.81197%;padding-top:100px}.pull-right{float:right;width:31.62393%;padding-top:100px}header{padding:11px 0 13px;background:#df001f}header nav{display:flex;justify-content:space-between;padding:0 50px}header img{text-align:center}.main-nav,.header-social{display:flex;align-items:center;padding-left:0;list-style:none}.main-nav li,.social-list li{display:inline-block;padding-right:45px}.main-nav li a,.social-list li a{text-transform:uppercase;color:#fff}.main-nav a{font:700 13px 'Droid Sans', sans-serif}.main-nav li:last-child{padding-right:0}.social-list{padding-left:0}.social-list a{font:14px 'Droid Sans', sans-serif}.social-list a:before{font-family:FontAwesome;font-size:24px;color:#fff}.facebook a:before{padding-right:15px;content:"\f09a"}.twitter a:before{padding-right:10px;content:"\f099"}.google a:before{padding-right:10px;content:"\f0d5"}.welcome{height:70vh;padding:100px 0;background:url("../images/welcome.png") center/cover;text-align:center}.welcome h1{padding-top:20px}.welcome-heding,.welcome-heading-bottom{display:block}.welcome-heading{font:700 116px 'Oswald', sans-serif;text-transform:uppercase;color:#df001f}.welcome-heading-bottom{font:80px 'Great Vibes', cursive;text-transform:capitalize}.introducing{padding-top:100px}.introducing .heading{padding-bottom:0}.introducing-list{display:flex;justify-content:space-between;padding-left:0;list-style:none}.introducing-list li{position:relative}.introducing-list li img{max-width:370px}.intro-list{width:100%;position:absolute;padding-bottom:24px;background:#df001f;bottom:0;color:#fff}.intro-list h4{padding-left:27px;margin:17px 0 0;font:22px 'Oswald', sans-serif}.intro-list span{padding-left:27px;padding-bottom:24px;font:16px 'Droid Sans', sans-serif}.social-list.social-hide{display:none;padding-left:27px}.social-list.social-hide li{padding-top:23px;padding-right:15px}.intro-list:hover .social-list{display:block}.line::after{content:"";display:block;width:100%;height:1px;margin:100px auto 0;background:#dfdfdf}.upcoming,.latest{padding-bottom:100px}.concert-date{float:left;height:auto;margin-right:80px;position:relative}.concert-date img{max-width:270px}.concert-date .hover-date{position:absolute;width:100%;top:0;bottom:0;display:flex;align-items:center}.concert-date .hover-date .wrap-span{display:block;margin:0 auto;text-align:center}.concert-date .hover-date .wrap-span span{display:block;font:500 32px 'Oswald', sans-serif;color:#fff;line-height:1}.location h5{margin:0;padding:23px 0 0;font:500 22px 'Oswald', sans-serif}.location dl{padding-bottom:10px}.concert{padding-bottom:5px;border-bottom:4px solid #dfdfdf}.latest .heading{padding-bottom:0}.founder{background:url("../images/founder.png") center/cover}.founder .founder-main{max-width:556px;padding:85px 0 80px 80px}.founder .founder-main h2{margin-bottom:0;font:500 32px 'Oswald', sans-serif;text-transform:uppercase}.founder .founder-main p{margin:0 0 45px;font:22px 'Droid Sans', sans-serif}.founder-main .cantus{font-size:65px;line-height:0.7;color:#fff}.song{list-style:none;display:flex;flex-direction:column;flex-wrap:wrap;max-height:168px;margin-top:43px;padding-left:0}.song li{width:199px;padding:7px 0 12px;border-bottom:1px solid #999999}.song li a{font:16px 'Droid Sans', sans-serif;color:#333333}.instagram{padding-bottom:90px}.instagram-list{margin-top:0;padding-left:0;list-style:none;display:flex;flex-wrap:wrap}.instagram-list li:nth-child(odd){padding-right:29px}.instagram-list li:nth-child(2){padding-bottom:29px}.instagram-list img{max-width:170px}.form{width:530px;margin:0 auto;padding-bottom:19px;display:flex;justify-content:space-between;border-bottom:4px solid #999999}.form input{-moz-appearance:none;-webkit-appearance:none;appearence:none}.email{border:none;font:16px 'Droid Sans', sans-serif;text-transform:lowercase}.email::-moz-placeholder{color:#282828}.email::-webkit-input-placeholder{color:#282828}.email::placeholder{color:#282828}.sendsubmit{width:14px;height:14px;margin:0;padding:0;border:0;background:url("../images/arrow.png") no-repeat center top;text-indent:-1000em}.footer{padding:69px 0 90px;border-top:1px solid #dfdfdf;text-align:center}.footer .main-nav{display:block}.footer .main-nav a{color:#333333}.footer p{font:13px 'Droid Sans', sans-serif;color:#333;letter-spacing:0.65px}.subscribe{padding:100px 0 70px}.download{background:url("../images/download.png") center/cover}.download .download-main{padding:80px 0 100px;text-align:center;color:#fff}.download .download-main h2{margin:0;font:500 32px 'Oswald', sans-serif;text-transform:capitalize}.download .download-main p{margin:9px 0 40px;font:22px 'Droid Sans', sans-serif}.download-list{padding-left:0;list-style:none}.download-list li{display:inline-block}.download-list li:first-child{margin-right:10px}.download-list li img{max-width:162px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUtc2Nzcy9zYXNzL25vcm1hbGl6ZS9faW1wb3J0LW5vdy5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS1zY3NzL3Nhc3MvX25vcm1hbGl6ZS5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS1zY3NzL3Nhc3Mvbm9ybWFsaXplL192YXJpYWJsZXMuc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUtc2Nzcy9zYXNzL25vcm1hbGl6ZS9fdmVydGljYWwtcmh5dGhtLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvbm9ybWFsaXplLXNjc3Mvc2Fzcy9ub3JtYWxpemUvX25vcm1hbGl6ZS1taXhpbi5zY3NzIiwidXRpbHMvX3ZhcmlhYmxlcy5zY3NzIiwiYmFzZS9fdHlwb2dyYXBoeS5zY3NzIiwiYmFzZS9fYmFzZS5zY3NzIiwiY29tcG9uZW50cy9fYnV0dG9ucy5zY3NzIiwiY29tcG9uZW50cy9fbGlzdC5zY3NzIiwibGF5b3V0L19ncmlkLnNjc3MiLCJsYXlvdXQvX2hlYWRlci5zY3NzIiwibGF5b3V0L19uYXZpZ2F0aW9uLnNjc3MiLCJsYXlvdXQvX3NlY3Rpb24uc2NzcyIsImxheW91dC9fZm9ybXMuc2NzcyIsImxheW91dC9fZm9vdGVyLnNjc3MiLCJwYWdlcy9faG9tZS5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJub3JtYWxpemUvaW1wb3J0LW5vd1wiO1xuXG5AaW1wb3J0ICd1dGlscy92YXJpYWJsZXMnO1xuXG5AaW1wb3J0ICdiYXNlL3R5cG9ncmFwaHknO1xuQGltcG9ydCAnYmFzZS9iYXNlJztcblxuQGltcG9ydCAnY29tcG9uZW50cy9idXR0b25zJztcbkBpbXBvcnQgJ2NvbXBvbmVudHMvbGlzdCc7XG5cbkBpbXBvcnQgJ2xheW91dC9ncmlkJztcbkBpbXBvcnQgJ2xheW91dC9oZWFkZXInO1xuQGltcG9ydCAnbGF5b3V0L25hdmlnYXRpb24nO1xuQGltcG9ydCAnbGF5b3V0L3NlY3Rpb24nO1xuQGltcG9ydCAnbGF5b3V0L2Zvcm1zJztcbkBpbXBvcnQgJ2xheW91dC9mb290ZXInO1xuXG5cbkBpbXBvcnQgJ3BhZ2VzL2hvbWUnO1xuIiwiLy8gSW1wb3J0IE5vd1xuLy9cbi8vIElmIHlvdSBpbXBvcnQgdGhpcyBtb2R1bGUgZGlyZWN0bHksIGl0IHdpbGwgaW1tZWRpYXRlbHkgb3V0cHV0IGFsbCB0aGUgQ1NTXG4vLyBuZWVkZWQgdG8gbm9ybWFsaXplIGRlZmF1bHQgSFRNTCBlbGVtZW50cyBhY3Jvc3MgYWxsIGJyb3dzZXJzLlxuLy9cbi8vIGBgYFxuLy8gQGltcG9ydCBcIm5vcm1hbGl6ZS9pbXBvcnQtbm93XCI7XG4vLyBgYGBcblxuQGltcG9ydCAnLi4vbm9ybWFsaXplJztcbkBpbmNsdWRlIG5vcm1hbGl6ZSgpO1xuIiwiQGltcG9ydCAnbm9ybWFsaXplL3ZhcmlhYmxlcyc7XG5AaW1wb3J0ICdub3JtYWxpemUvdmVydGljYWwtcmh5dGhtJztcbkBpbXBvcnQgJ25vcm1hbGl6ZS9ub3JtYWxpemUtbWl4aW4nO1xuIiwiLy9cbi8vIFZhcmlhYmxlc1xuLy9cbi8vIFlvdSBjYW4gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgdmFsdWVzIGJ5IHNldHRpbmcgdGhlIHZhcmlhYmxlcyBpbiB5b3VyIFNhc3Ncbi8vIGJlZm9yZSBpbXBvcnRpbmcgdGhlIG5vcm1hbGl6ZS1zY3NzIGxpYnJhcnkuXG5cbi8vIFRoZSBmb250IHNpemUgc2V0IG9uIHRoZSByb290IGh0bWwgZWxlbWVudC5cbiRiYXNlLWZvbnQtc2l6ZTogMTZweCAhZGVmYXVsdDtcblxuLy8gVGhlIGJhc2UgbGluZSBoZWlnaHQgZGV0ZXJtaW5lcyB0aGUgYmFzaWMgdW5pdCBvZiB2ZXJ0aWNhbCByaHl0aG0uXG4kYmFzZS1saW5lLWhlaWdodDogMjRweCAhZGVmYXVsdDtcblxuLy8gVGhlIGxlbmd0aCB1bml0IGluIHdoaWNoIHRvIG91dHB1dCB2ZXJ0aWNhbCByaHl0aG0gdmFsdWVzLlxuLy8gU3VwcG9ydGVkIHZhbHVlczogcHgsIGVtLCByZW0uXG4kYmFzZS11bml0OiAnZW0nICFkZWZhdWx0O1xuXG4vLyBUaGUgZGVmYXVsdCBmb250IGZhbWlseS5cbiRiYXNlLWZvbnQtZmFtaWx5OiBudWxsICFkZWZhdWx0O1xuXG4vLyBUaGUgZm9udCBzaXplcyBmb3IgaDEtaDYuXG4kaDEtZm9udC1zaXplOiAyICAgICogJGJhc2UtZm9udC1zaXplICFkZWZhdWx0O1xuJGgyLWZvbnQtc2l6ZTogMS41ICAqICRiYXNlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcbiRoMy1mb250LXNpemU6IDEuMTcgKiAkYmFzZS1mb250LXNpemUgIWRlZmF1bHQ7XG4kaDQtZm9udC1zaXplOiAxICAgICogJGJhc2UtZm9udC1zaXplICFkZWZhdWx0O1xuJGg1LWZvbnQtc2l6ZTogMC44MyAqICRiYXNlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcbiRoNi1mb250LXNpemU6IDAuNjcgKiAkYmFzZS1mb250LXNpemUgIWRlZmF1bHQ7XG5cbi8vIFRoZSBhbW91bnQgbGlzdHMgYW5kIGJsb2NrcXVvdGVzIGFyZSBpbmRlbnRlZC5cbiRpbmRlbnQtYW1vdW50OiA0MHB4ICFkZWZhdWx0O1xuXG4vLyBUaGUgZm9sbG93aW5nIHZhcmlhYmxlIGNvbnRyb2xzIHdoZXRoZXIgbm9ybWFsaXplLXNjc3Mgd2lsbCBvdXRwdXRcbi8vIGZvbnQtc2l6ZXMsIGxpbmUtaGVpZ2h0cyBhbmQgYmxvY2stbGV2ZWwgdG9wL2JvdHRvbSBtYXJnaW5zIHRoYXQgZm9ybSBhIGJhc2ljXG4vLyB2ZXJ0aWNhbCByaHl0aG0gb24gdGhlIHBhZ2UsIHdoaWNoIGRpZmZlcnMgZnJvbSB0aGUgb3JpZ2luYWwgTm9ybWFsaXplLmNzcy5cbi8vIEhvd2V2ZXIsIGNoYW5naW5nIGFueSBvZiB0aGUgdmFyaWFibGVzIGFib3ZlIHdpbGwgY2F1c2Vcbi8vICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHRvIGJlIGF1dG9tYXRpY2FsbHkgc2V0IHRvIHRydWUuXG4kbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobTogZmFsc2UgIWRlZmF1bHQ7XG4iLCIvL1xuLy8gVmVydGljYWwgUmh5dGhtXG4vL1xuLy8gVGhpcyBpcyB0aGUgbWluaW1hbCBhbW91bnQgb2YgY29kZSBuZWVkZWQgdG8gY3JlYXRlIHZlcnRpY2FsIHJoeXRobSBpbiBvdXJcbi8vIENTUy4gSWYgeW91IGFyZSBsb29raW5nIGZvciBhIHJvYnVzdCBzb2x1dGlvbiwgbG9vayBhdCB0aGUgZXhjZWxsZW50IFR5cGV5XG4vLyBsaWJyYXJ5LiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9qcHRhcmFudG8vdHlwZXlcblxuQGZ1bmN0aW9uIG5vcm1hbGl6ZS1yaHl0aG0oJHZhbHVlLCAkcmVsYXRpdmUtdG86ICRiYXNlLWZvbnQtc2l6ZSwgJHVuaXQ6ICRiYXNlLXVuaXQpIHtcbiAgQGlmIHVuaXQoJHZhbHVlKSAhPSBweCB7XG4gICAgQGVycm9yIFwiVGhlIG5vcm1hbGl6ZSB2ZXJ0aWNhbC1yaHl0aG0gbW9kdWxlIG9ubHkgc3VwcG9ydHMgcHggaW5wdXRzLiBUaGUgdHlwZXkgbGlicmFyeSBpcyBiZXR0ZXIuXCI7XG4gIH1cbiAgQGlmICR1bml0ID09IHJlbSB7XG4gICAgQHJldHVybiAoJHZhbHVlIC8gJGJhc2UtZm9udC1zaXplKSAqIDFyZW07XG4gIH1cbiAgQGVsc2UgaWYgJHVuaXQgPT0gZW0ge1xuICAgIEByZXR1cm4gKCR2YWx1ZSAvICRyZWxhdGl2ZS10bykgKiAxZW07XG4gIH1cbiAgQGVsc2UgeyAvLyAkdW5pdCA9PSBweFxuICAgIEByZXR1cm4gJHZhbHVlO1xuICB9XG59XG5cbkBtaXhpbiBub3JtYWxpemUtZm9udC1zaXplKCR2YWx1ZSwgJHJlbGF0aXZlLXRvOiAkYmFzZS1mb250LXNpemUpIHtcbiAgQGlmIHVuaXQoJHZhbHVlKSAhPSAncHgnIHtcbiAgICBAZXJyb3IgXCJub3JtYWxpemUtZm9udC1zaXplKCkgb25seSBzdXBwb3J0cyBweCBpbnB1dHMuIFRoZSB0eXBleSBsaWJyYXJ5IGlzIGJldHRlci5cIjtcbiAgfVxuICBmb250LXNpemU6IG5vcm1hbGl6ZS1yaHl0aG0oJHZhbHVlLCAkcmVsYXRpdmUtdG8pO1xufVxuXG5AbWl4aW4gbm9ybWFsaXplLXJoeXRobSgkcHJvcGVydHksICR2YWx1ZXMsICRyZWxhdGl2ZS10bzogJGJhc2UtZm9udC1zaXplKSB7XG4gICR2YWx1ZS1saXN0OiAkdmFsdWVzO1xuICAkc2VwOiBzcGFjZTtcbiAgQGlmIHR5cGUtb2YoJHZhbHVlcykgPT0gJ2xpc3QnIHtcbiAgICAkc2VwOiBsaXN0LXNlcGFyYXRvcigkdmFsdWVzKTtcbiAgfVxuICBAZWxzZSB7XG4gICAgJHZhbHVlLWxpc3Q6IGFwcGVuZCgoKSwgJHZhbHVlcyk7XG4gIH1cblxuICAkbm9ybWFsaXplZC12YWx1ZXM6ICgpO1xuICBAZWFjaCAkdmFsdWUgaW4gJHZhbHVlLWxpc3Qge1xuICAgIEBpZiB1bml0bGVzcygkdmFsdWUpIGFuZCAkdmFsdWUgIT0gMCB7XG4gICAgICAkdmFsdWU6ICR2YWx1ZSAqIG5vcm1hbGl6ZS1yaHl0aG0oJGJhc2UtbGluZS1oZWlnaHQsICRyZWxhdGl2ZS10byk7XG4gICAgfVxuICAgICRub3JtYWxpemVkLXZhbHVlczogYXBwZW5kKCRub3JtYWxpemVkLXZhbHVlcywgJHZhbHVlLCAkc2VwKTtcbiAgfVxuICAjeyRwcm9wZXJ0eX06ICRub3JtYWxpemVkLXZhbHVlcztcbn1cblxuQG1peGluIG5vcm1hbGl6ZS1tYXJnaW4oJHZhbHVlcywgJHJlbGF0aXZlLXRvOiAkYmFzZS1mb250LXNpemUpIHtcbiAgQGluY2x1ZGUgbm9ybWFsaXplLXJoeXRobShtYXJnaW4sICR2YWx1ZXMsICRyZWxhdGl2ZS10byk7XG59XG5cbkBtaXhpbiBub3JtYWxpemUtbGluZS1oZWlnaHQoJGZvbnQtc2l6ZSwgJG1pbi1saW5lLXBhZGRpbmc6IDJweCkge1xuICAkbGluZXM6IGNlaWwoJGZvbnQtc2l6ZSAvICRiYXNlLWxpbmUtaGVpZ2h0KTtcbiAgLy8gSWYgbGluZXMgYXJlIGNyYW1wZWQgaW5jbHVkZSBzb21lIGV4dHJhIGxlYWRpbmcuXG4gIEBpZiAoJGxpbmVzICogJGJhc2UtbGluZS1oZWlnaHQgLSAkZm9udC1zaXplKSA8ICgkbWluLWxpbmUtcGFkZGluZyAqIDIpIHtcbiAgICAkbGluZXM6ICRsaW5lcyArIDE7XG4gIH1cbiAgQGluY2x1ZGUgbm9ybWFsaXplLXJoeXRobShsaW5lLWhlaWdodCwgJGxpbmVzLCAkZm9udC1zaXplKTtcbn1cbiIsIi8vIEhlbHBlciBmdW5jdGlvbiBmb3IgdGhlIG5vcm1hbGl6ZSgpIG1peGluLlxuQGZ1bmN0aW9uIF9ub3JtYWxpemUtaW5jbHVkZSgkc2VjdGlvbiwgJGV4Y2x1ZGU6IG51bGwpIHtcbiAgLy8gSW5pdGlhbGl6ZSB0aGUgZ2xvYmFsIHZhcmlhYmxlcyBuZWVkZWQgYnkgdGhpcyBmdW5jdGlvbi5cbiAgQGlmIG5vdCBnbG9iYWxfdmFyaWFibGVfZXhpc3RzKF9ub3JtYWxpemUtaW5jbHVkZSkge1xuICAgICRfbm9ybWFsaXplLWluY2x1ZGU6ICgpICFnbG9iYWw7XG4gICAgJF9ub3JtYWxpemUtZXhjbHVkZTogKCkgIWdsb2JhbDtcbiAgfVxuICAvLyBTaW5jZSB3ZSBhcmUgZ2l2ZW4gMiBwYXJhbWV0ZXJzLCBzZXQgdGhlIGdsb2JhbCB2YXJpYWJsZXMuXG4gIEBpZiAkZXhjbHVkZSAhPSBudWxsIHtcbiAgICAkaW5jbHVkZTogJHNlY3Rpb247XG4gICAgLy8gU2FzcyBkb2Vzbid0IGhhdmUgc3RhdGljIHZhcmlhYmxlcywgc28gdGhlIHdvcmstYXJvdW5kIGlzIHRvIHN0dWZmIHRoZXNlXG4gICAgLy8gdmFsdWVzIGludG8gZ2xvYmFsIHZhcmlhYmxlcyBzbyB3ZSBjYW4gYWNjZXNzIHRoZW0gaW4gZnV0dXJlIGNhbGxzLlxuICAgICRfbm9ybWFsaXplLWluY2x1ZGU6IGlmKHR5cGUtb2YoJGluY2x1ZGUpID09ICdsaXN0JywgJGluY2x1ZGUsICgkaW5jbHVkZSkpICFnbG9iYWw7XG4gICAgJF9ub3JtYWxpemUtZXhjbHVkZTogaWYodHlwZS1vZigkZXhjbHVkZSkgPT0gJ2xpc3QnLCAkZXhjbHVkZSwgKCRleGNsdWRlKSkgIWdsb2JhbDtcbiAgICBAcmV0dXJuIHRydWU7XG4gIH1cblxuICAvLyBDaGVjayBpZiAkc2VjdGlvbiBpcyBpbiB0aGUgJGluY2x1ZGUgbGlzdC5cbiAgQGlmIGluZGV4KCRfbm9ybWFsaXplLWluY2x1ZGUsICRzZWN0aW9uKSB7XG4gICAgQHJldHVybiB0cnVlO1xuICB9XG4gIC8vIElmICRpbmNsdWRlIGlzIHNldCB0byAoYWxsKSwgbWFrZSBzdXJlICRzZWN0aW9uIGlzIG5vdCBpbiAkZXhjbHVkZS5cbiAgQGVsc2UgaWYgbm90IGluZGV4KCRfbm9ybWFsaXplLWV4Y2x1ZGUsICRzZWN0aW9uKSBhbmQgaW5kZXgoJF9ub3JtYWxpemUtaW5jbHVkZSwgYWxsKSB7XG4gICAgQHJldHVybiB0cnVlO1xuICB9XG4gIEByZXR1cm4gZmFsc2U7XG59XG5cbkBtaXhpbiBub3JtYWxpemUoJGluY2x1ZGU6IChhbGwpLCAkZXhjbHVkZTogKCkpIHtcbiAgLy8gSW5pdGlhbGl6ZSB0aGUgaGVscGVyIGZ1bmN0aW9uIGJ5IHBhc3NpbmcgaXQgdGhpcyBtaXhpbidzIHBhcmFtZXRlcnMuXG4gICRpbml0OiBfbm9ybWFsaXplLWluY2x1ZGUoJGluY2x1ZGUsICRleGNsdWRlKTtcblxuICAvLyBJZiB3ZSd2ZSBjdXN0b21pemVkIGFueSBmb250IHZhcmlhYmxlcywgd2UnbGwgbmVlZCBleHRyYSBwcm9wZXJ0aWVzLlxuICBAaWYgJGJhc2UtbGluZS1oZWlnaHQgIT0gMjRweFxuICAgIG9yICRiYXNlLXVuaXQgIT0gJ2VtJ1xuICAgIG9yICRoMi1mb250LXNpemUgIT0gMS41ICAqICRiYXNlLWZvbnQtc2l6ZVxuICAgIG9yICRoMy1mb250LXNpemUgIT0gMS4xNyAqICRiYXNlLWZvbnQtc2l6ZVxuICAgIG9yICRoNC1mb250LXNpemUgIT0gMSAgICAqICRiYXNlLWZvbnQtc2l6ZVxuICAgIG9yICRoNS1mb250LXNpemUgIT0gMC44MyAqICRiYXNlLWZvbnQtc2l6ZVxuICAgIG9yICRoNi1mb250LXNpemUgIT0gMC42NyAqICRiYXNlLWZvbnQtc2l6ZSB7XG4gICAgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG06IHRydWUgIWdsb2JhbDtcbiAgfVxuXG4gIC8qISBub3JtYWxpemUtc2NzcyB8IE1JVC9HUEx2MiBMaWNlbnNlIHwgYml0Lmx5L25vcm1hbGl6ZS1zY3NzICovXG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZShkb2N1bWVudCkge1xuICAgIC8qIERvY3VtZW50XG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAgICAgKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluXG4gICAgICogICAgSUUgb24gV2luZG93cyBQaG9uZSBhbmQgaW4gaU9TLlxuICAgICAqL1xuXG4gICAgaHRtbCB7XG4gICAgICBAaWYgJGJhc2UtZm9udC1mYW1pbHkge1xuICAgICAgICAvKiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuICovXG4gICAgICAgIGZvbnQtZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseTtcbiAgICAgIH1cbiAgICAgIEBpZiAkYmFzZS1mb250LXNpemUgIT0gMTZweCBvciAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICAgIC8vIENvcnJlY3Qgb2xkIGJyb3dzZXIgYnVnIHRoYXQgcHJldmVudGVkIGFjY2Vzc2libGUgcmVzaXppbmcgb2YgdGV4dFxuICAgICAgICAvLyB3aGVuIHJvb3QgZm9udC1zaXplIGlzIHNldCB3aXRoIHB4IG9yIGVtLlxuICAgICAgICBmb250LXNpemU6ICgkYmFzZS1mb250LXNpemUgLyAxNnB4KSAqIDEwMCU7XG4gICAgICB9XG4gICAgICBAaWYgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0ge1xuICAgICAgICBsaW5lLWhlaWdodDogKCRiYXNlLWxpbmUtaGVpZ2h0IC8gJGJhc2UtZm9udC1zaXplKSAqIDFlbTsgLyogMSAqL1xuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAgICAgfVxuICAgICAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUoc2VjdGlvbnMpIHtcbiAgICAvKiBTZWN0aW9uc1xuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAgICAgKi9cblxuICAgIGJvZHkge1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqL1xuXG4gICAgYXJ0aWNsZSxcbiAgICBhc2lkZSxcbiAgICBmb290ZXIsXG4gICAgaGVhZGVyLFxuICAgIG5hdixcbiAgICBzZWN0aW9uIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAgICAgKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICAgICAqL1xuXG4gICAgaDEge1xuICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLWZvbnQtc2l6ZSgkaDEtZm9udC1zaXplKTtcbiAgICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkaDEtZm9udC1zaXplKTtcbiAgICAgIH1cblxuICAgICAgQGlmICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHtcbiAgICAgICAgLyogU2V0IDEgdW5pdCBvZiB2ZXJ0aWNhbCByaHl0aG0gb24gdGhlIHRvcCBhbmQgYm90dG9tIG1hcmdpbnMuICovXG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwLCAkaDEtZm9udC1zaXplKTtcbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgbWFyZ2luOiAwLjY3ZW0gMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBAaWYgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0ge1xuICAgICAgaDIge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtZm9udC1zaXplKCRoMi1mb250LXNpemUpO1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbGluZS1oZWlnaHQoJGgyLWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwLCAkaDItZm9udC1zaXplKTtcbiAgICAgIH1cblxuICAgICAgaDMge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtZm9udC1zaXplKCRoMy1mb250LXNpemUpO1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbGluZS1oZWlnaHQoJGgzLWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwLCAkaDMtZm9udC1zaXplKTtcbiAgICAgIH1cblxuICAgICAgaDQge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtZm9udC1zaXplKCRoNC1mb250LXNpemUpO1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbGluZS1oZWlnaHQoJGg0LWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwLCAkaDQtZm9udC1zaXplKTtcbiAgICAgIH1cblxuICAgICAgaDUge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtZm9udC1zaXplKCRoNS1mb250LXNpemUpO1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbGluZS1oZWlnaHQoJGg1LWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwLCAkaDUtZm9udC1zaXplKTtcbiAgICAgIH1cblxuICAgICAgaDYge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtZm9udC1zaXplKCRoNi1mb250LXNpemUpO1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbGluZS1oZWlnaHQoJGg2LWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwLCAkaDYtZm9udC1zaXplKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBAaWYgX25vcm1hbGl6ZS1pbmNsdWRlKGdyb3VwaW5nKSB7XG4gICAgLyogR3JvdXBpbmcgY29udGVudFxuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgICBAaWYgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0ge1xuICAgICAgLyoqXG4gICAgICAgKiBTZXQgMSB1bml0IG9mIHZlcnRpY2FsIHJoeXRobSBvbiB0aGUgdG9wIGFuZCBib3R0b20gbWFyZ2luLlxuICAgICAgICovXG5cbiAgICAgIGJsb2NrcXVvdGUge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbWFyZ2luKDEgJGluZGVudC1hbW91bnQpO1xuICAgICAgfVxuXG4gICAgICBkbCxcbiAgICAgIG9sLFxuICAgICAgdWwge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbWFyZ2luKDEgMCk7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogVHVybiBvZmYgbWFyZ2lucyBvbiBuZXN0ZWQgbGlzdHMuXG4gICAgICAgKi9cblxuICAgICAgb2wsXG4gICAgICB1bCB7XG4gICAgICAgIG9sLFxuICAgICAgICB1bCB7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGRkIHtcbiAgICAgICAgbWFyZ2luOiAwIDAgMCAkaW5kZW50LWFtb3VudDtcbiAgICAgIH1cblxuICAgICAgb2wsXG4gICAgICB1bCB7XG4gICAgICAgIHBhZGRpbmc6IDAgMCAwICRpbmRlbnQtYW1vdW50O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqL1xuXG4gICAgZmlnY2FwdGlvbixcbiAgICBmaWd1cmUge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICAgICAqL1xuXG4gICAgZmlndXJlIHtcbiAgICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAkaW5kZW50LWFtb3VudCk7XG4gICAgICB9XG4gICAgICBAZWxzZSB7XG4gICAgICAgIG1hcmdpbjogMWVtICRpbmRlbnQtYW1vdW50O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gICAgICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gICAgICovXG5cbiAgICBociB7XG4gICAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICAgICAgaGVpZ2h0OiAwOyAvKiAxICovXG4gICAgICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICAgICAqL1xuXG4gICAgbWFpbiB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG5cbiAgICBAaWYgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0ge1xuICAgICAgLyoqXG4gICAgICAgKiBTZXQgMSB1bml0IG9mIHZlcnRpY2FsIHJoeXRobSBvbiB0aGUgdG9wIGFuZCBib3R0b20gbWFyZ2luLlxuICAgICAgICovXG5cbiAgICAgIHAsXG4gICAgICBwcmUge1xuICAgICAgICBAaW5jbHVkZSBub3JtYWxpemUtbWFyZ2luKDEgMCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAgICAgKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gICAgICovXG5cbiAgICBwcmUge1xuICAgICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gICAgICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUobGlua3MpIHtcbiAgICAvKiBMaW5rc1xuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgICAvKipcbiAgICAgKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gICAgICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICAgICAqL1xuXG4gICAgYSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogMSAqL1xuICAgICAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUodGV4dCkge1xuICAgIC8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctIGFuZCBGaXJlZm94IDM5LS5cbiAgICAgKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICAgICAqL1xuXG4gICAgYWJiclt0aXRsZV0ge1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICAgICAqL1xuXG4gICAgYixcbiAgICBzdHJvbmcge1xuICAgICAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAgICAgKi9cblxuICAgIGIsXG4gICAgc3Ryb25nIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAgICAgKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gICAgICovXG5cbiAgICBjb2RlLFxuICAgIGtiZCxcbiAgICBzYW1wIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICAgICAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gICAgICovXG5cbiAgICBkZm4ge1xuICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAgICAgKi9cblxuICAgIG1hcmsge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgICAgIGNvbG9yOiAjMDAwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICAgICAqL1xuXG4gICAgc21hbGwge1xuICAgICAgZm9udC1zaXplOiA4MCU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gICAgICogYWxsIGJyb3dzZXJzLlxuICAgICAqL1xuXG4gICAgc3ViLFxuICAgIHN1cCB7XG4gICAgICBmb250LXNpemU6IDc1JTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAwO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAgIH1cblxuICAgIHN1YiB7XG4gICAgICBib3R0b206IC0wLjI1ZW07XG4gICAgfVxuXG4gICAgc3VwIHtcbiAgICAgIHRvcDogLTAuNWVtO1xuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUoZW1iZWRkZWQpIHtcbiAgICAvKiBFbWJlZGRlZCBjb250ZW50XG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqL1xuXG4gICAgYXVkaW8sXG4gICAgdmlkZW8ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gICAgICovXG5cbiAgICBhdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGhlaWdodDogMDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAgICAgKi9cblxuICAgIGltZyB7XG4gICAgICBib3JkZXItc3R5bGU6IG5vbmU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gICAgICovXG5cbiAgICBzdmc6bm90KDpyb290KSB7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUoZm9ybXMpIHtcbiAgICAvKiBGb3Jtc1xuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgICAvKipcbiAgICAgKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICAgICAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAgICAgKi9cblxuICAgIGJ1dHRvbixcbiAgICBpbnB1dCxcbiAgICBvcHRncm91cCxcbiAgICBzZWxlY3QsXG4gICAgdGV4dGFyZWEge1xuICAgICAgZm9udC1mYW1pbHk6IGlmKCRiYXNlLWZvbnQtZmFtaWx5LCAkYmFzZS1mb250LWZhbWlseSwgc2Fucy1zZXJpZik7IC8qIDEgKi9cbiAgICAgIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xuICAgICAgQGlmICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6ICgkYmFzZS1saW5lLWhlaWdodCAvICRiYXNlLWZvbnQtc2l6ZSkgKiAxZW07IC8qIDEgKi9cbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgICAgIH1cbiAgICAgIG1hcmdpbjogMDsgLyogMiAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICAgICAqL1xuXG4gICAgYnV0dG9uIHtcbiAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICAgICAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAgICAgKi9cblxuICAgIGJ1dHRvbixcbiAgICBzZWxlY3QgeyAvKiAxICovXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAgICAgKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gICAgICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAgICAgKi9cblxuICAgIGJ1dHRvbixcbiAgICBodG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG4gICAgW3R5cGU9XCJyZXNldFwiXSxcbiAgICBbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xuICAgIH1cblxuICAgIGJ1dHRvbixcbiAgICBbdHlwZT1cImJ1dHRvblwiXSxcbiAgICBbdHlwZT1cInJlc2V0XCJdLFxuICAgIFt0eXBlPVwic3VibWl0XCJdIHtcblxuICAgICAgLyoqXG4gICAgICAgKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICAgICAgICovXG5cbiAgICAgICY6Oi1tb3otZm9jdXMtaW5uZXIge1xuICAgICAgICBib3JkZXItc3R5bGU6IG5vbmU7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICAgICAgICovXG5cbiAgICAgICY6LW1vei1mb2N1c3Jpbmcge1xuICAgICAgICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAgICAgKi9cblxuICAgIGlucHV0IHtcbiAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cbiAgICAgKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICAgICAqL1xuXG4gICAgW3R5cGU9XCJjaGVja2JveFwiXSxcbiAgICBbdHlwZT1cInJhZGlvXCJdIHtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgICAgIHBhZGRpbmc6IDA7IC8qIDIgKi9cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gICAgICovXG5cbiAgICBbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbiAgICBbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gICAgICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gICAgICovXG5cbiAgICBbdHlwZT1cInNlYXJjaFwiXSB7XG4gICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICAgICAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cblxuICAgICAgLyoqXG4gICAgICAgKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICAgICAgICovXG5cbiAgICAgICY6Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG4gICAgICAmOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgICAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gICAgICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICAgICAqL1xuXG4gICAgOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICAgICAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAgICAgKi9cblxuICAgIGZpZWxkc2V0IHtcbiAgICAgIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICAgICAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAgICAgKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gICAgICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gICAgICovXG5cbiAgICBsZWdlbmQge1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICAgICAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgICAgIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICAgICAgcGFkZGluZzogMDsgLyogMyAqL1xuICAgICAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAgICAgKiAyLiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICAgICAqL1xuXG4gICAgcHJvZ3Jlc3Mge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICAgICAqL1xuXG4gICAgdGV4dGFyZWEge1xuICAgICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgfVxuICB9XG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZShpbnRlcmFjdGl2ZSkge1xuICAgIC8qIEludGVyYWN0aXZlXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICAgICAqL1xuXG4gICAgZGV0YWlscyB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG5cbiAgICAvKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAgICAgKi9cblxuICAgIHN1bW1hcnkge1xuICAgICAgZGlzcGxheTogbGlzdC1pdGVtO1xuICAgIH1cblxuICAgIC8qXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gICAgICovXG5cbiAgICBtZW51IHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgICBAaWYgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0ge1xuICAgICAgICAvKlxuICAgICAgICAgKiAxLiBTZXQgMSB1bml0IG9mIHZlcnRpY2FsIHJoeXRobSBvbiB0aGUgdG9wIGFuZCBib3R0b20gbWFyZ2luLlxuICAgICAgICAgKiAyLiBTZXQgY29uc2lzdGVudCBzcGFjZSBmb3IgdGhlIGxpc3Qgc3R5bGUgaW1hZ2UuXG4gICAgICAgICAqL1xuXG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwKTsgLyogMSAqL1xuICAgICAgICBwYWRkaW5nOiAwIDAgMCAkaW5kZW50LWFtb3VudDsgLyogMiAqL1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUdXJuIG9mZiBtYXJnaW5zIG9uIG5lc3RlZCBsaXN0cy5cbiAgICAgICAgICovXG5cbiAgICAgICAgbWVudSAmLFxuICAgICAgICBvbCAmLFxuICAgICAgICB1bCAmIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBAaWYgX25vcm1hbGl6ZS1pbmNsdWRlKHNjcmlwdGluZykge1xuICAgIC8qIFNjcmlwdGluZ1xuICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAgICAgKi9cblxuICAgIGNhbnZhcyB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gICAgICovXG5cbiAgICB0ZW1wbGF0ZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUoaGlkZGVuKSB7XG4gICAgLyogSGlkZGVuXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAgICAgKi9cblxuICAgIFtoaWRkZW5dIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG59XG4iLCIkbWFpbi1iYWNrZ3JvdW5kOiAjZGYwMDFmO1xyXG4kbWFpbi1saXRlLWZvbnQtY29sb3I6ICNmZmY7XHJcbiRyZWQtY29sb3I6ICNkZjAwMWY7XHJcbiRoMi1jb2xvcjogIzMzMzMzMzsiLCJAZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnRHJvaWQgU2Fucyc7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvRHJvaWRTYW5zLUJvbGQtd2ViZm9udC5lb3QnKTtcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9Ecm9pZFNhbnMtQm9sZC13ZWJmb250LmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXHJcbiAgICB1cmwoJy4uL2ZvbnRzL0Ryb2lkU2Fucy1Cb2xkLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICB1cmwoJy4uL2ZvbnRzL0Ryb2lkU2Fucy1Cb2xkLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpLFxyXG4gICAgdXJsKCcuLi9mb250cy9Ecm9pZFNhbnMtQm9sZC13ZWJmb250LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcclxuICAgIHVybCgnLi4vZm9udHMvRHJvaWRTYW5zLUJvbGQtd2ViZm9udC5zdmcjZHJvaWRfc2Fuc2JvbGQnKSBmb3JtYXQoJ3N2ZycpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ0Ryb2lkIFNhbnMnO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL0Ryb2lkU2Fucy13ZWJmb250LmVvdCcpO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL0Ryb2lkU2Fucy13ZWJmb250LmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXHJcbiAgICB1cmwoJy4uL2ZvbnRzL0Ryb2lkU2Fucy13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgdXJsKCcuLi9mb250cy9Ecm9pZFNhbnMtd2ViZm9udC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXHJcbiAgICB1cmwoJy4uL2ZvbnRzL0Ryb2lkU2Fucy13ZWJmb250LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcclxuICAgIHVybCgnLi4vZm9udHMvRHJvaWRTYW5zLXdlYmZvbnQuc3ZnI2Ryb2lkX3NhbnNyZWd1bGFyJykgZm9ybWF0KCdzdmcnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcblxyXG59IiwiLmNsZWFyZml4OmFmdGVyIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGNsZWFyOiBib3RoO1xyXG59XHJcblxyXG5pbWcge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcblxyXG5hIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxuLmhlYWRpbmcge1xyXG4gICAgcGFkZGluZy1ib3R0b206IDQ1cHg7XHJcbiAgICBoMiB7XHJcbiAgICAgICAgZm9udDogMzJweCAnT3N3YWxkJywgc2Fucy1zZXJpZjtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGNvbG9yOiAkaDItY29sb3I7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgICB9XHJcbiAgICBoMyB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICBmb250OiAzMnB4ICdHcmVhdCBWaWJlcycsIGN1cnNpdmU7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XHJcbiAgICAgICAgY29sb3I6ICRyZWQtY29sb3I7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDAuNTtcclxuICAgIH1cclxufVxyXG5cclxuLmNhbnR1cyB7XHJcbiAgICBmb250OiAyOHB4ICdHcmVhdCBWaWJlcycsIGN1cnNpdmU7XHJcbiAgICBjb2xvcjogJHJlZC1jb2xvcjtcclxufVxyXG5cclxuXHJcbiIsIi5idXR0b24ge1xyXG4gICAgcGFkZGluZzogMjFweCA0NHB4IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MHB4O1xyXG4gICAgZm9udDogNzAwIDEycHggJ0Ryb2lkIFNhbnMnLCBzYW5zLXNlcmlmO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxufVxyXG5cclxuLndoaXRlLWJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgY29sb3I6ICRyZWQtY29sb3I7XHJcbn1cclxuXHJcbi5yZWQtYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQ6ICRyZWQtY29sb3I7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxufVxyXG5cclxuLndoaXRlLWJ1dHRvbjpob3ZlciwgLnJlZC1idXR0b246aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZDogIzllM2M0YTtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjVzIGVhc2U7XHJcbn0iLCIuYXJyb3cge1xyXG4gICAgbWFyZ2luLXRvcDogMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBsaSB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIGEge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICB3aWR0aDogMzVweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAzNXB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkcmVkLWNvbG9yO1xyXG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgLmZhLWFuZ2xlLXJpZ2h0LCAuZmEtYW5nbGUtbGVmdCB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiAxMTcwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcblxyXG4ucHVsbC1sZWZ0IHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6ICg3NzBweCoxMDAlKS8xMTcwcHg7XHJcbiAgICBwYWRkaW5nLXRvcDogMTAwcHg7XHJcbn1cclxuXHJcbi5wdWxsLXJpZ2h0IHtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIHdpZHRoOiAoMzcwcHgqMTAwJSkvMTE3MHB4O1xyXG4gICAgcGFkZGluZy10b3A6IDEwMHB4O1xyXG59IiwiXHJcbmhlYWRlciB7XHJcbiAgICBwYWRkaW5nOiAxMXB4IDAgMTNweDtcclxuICAgIGJhY2tncm91bmQ6ICRtYWluLWJhY2tncm91bmQ7XHJcbiAgICBuYXYge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIHBhZGRpbmc6IDAgNTBweDtcclxuICAgIH1cclxuICAgIGltZyB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG59IiwiLm1haW4tbmF2LCAuaGVhZGVyLXNvY2lhbCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHBhZGRpbmctbGVmdDogMDtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbi5tYWluLW5hdiwgLnNvY2lhbC1saXN0IHtcclxuICAgIGxpIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogNDVweDtcclxuICAgICAgICBhIHtcclxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgY29sb3I6ICRtYWluLWxpdGUtZm9udC1jb2xvcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5tYWluLW5hdiBhIHtcclxuICAgIGZvbnQ6IDcwMCAxM3B4ICdEcm9pZCBTYW5zJywgc2Fucy1zZXJpZjtcclxufVxyXG5cclxuLm1haW4tbmF2IGxpOmxhc3QtY2hpbGQge1xyXG4gICAgcGFkZGluZy1yaWdodDogMDtcclxufVxyXG5cclxuLnNvY2lhbC1saXN0IHtcclxuICAgIHBhZGRpbmctbGVmdDogMDtcclxuICAgIGEge1xyXG4gICAgICAgIGZvbnQ6IDE0cHggJ0Ryb2lkIFNhbnMnLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IEZvbnRBd2Vzb21lO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkbWFpbi1saXRlLWZvbnQtY29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uZmFjZWJvb2sgYTpiZWZvcmUge1xyXG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcclxuICAgIGNvbnRlbnQ6IFwiXFxmMDlhXCI7XHJcbn1cclxuXHJcbi50d2l0dGVyIGE6YmVmb3JlIHtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgICBjb250ZW50OiBcIlxcZjA5OVwiO1xyXG59XHJcblxyXG4uZ29vZ2xlIGE6YmVmb3JlIHtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgICBjb250ZW50OiBcIlxcZjBkNVwiO1xyXG59IiwiLyotLS0tLS0tLS0tLXdlbGNvbWUtLS0tLS0tLS0tLSovXHJcblxyXG4ud2VsY29tZSB7XHJcbiAgICBoZWlnaHQ6IDcwdmg7XHJcbiAgICBwYWRkaW5nOiAxMDBweCAwO1xyXG4gICAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWFnZXMvd2VsY29tZS5wbmcnKSBjZW50ZXIvY292ZXI7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBoMSB7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDIwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi53ZWxjb21lLWhlZGluZywgLndlbGNvbWUtaGVhZGluZy1ib3R0b20ge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi53ZWxjb21lLWhlYWRpbmcge1xyXG4gICAgZm9udDogNzAwIDExNnB4ICdPc3dhbGQnLCBzYW5zLXNlcmlmO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGNvbG9yOiAkcmVkLWNvbG9yO1xyXG59XHJcblxyXG4ud2VsY29tZS1oZWFkaW5nLWJvdHRvbSB7XHJcbiAgICBmb250OiA4MHB4ICdHcmVhdCBWaWJlcycsIGN1cnNpdmU7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcclxufVxyXG5cclxuLyotLS0tLS0tLS0tLS0tLS1pbnRyb2R1c2luZy0tLS0tLS0tLS0tLS0qL1xyXG5cclxuLmludHJvZHVjaW5nIHtcclxuICAgIHBhZGRpbmctdG9wOiAxMDBweDtcclxuICAgIC5oZWFkaW5nIHtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMDtcclxuICAgIH1cclxufVxyXG5cclxuLmludHJvZHVjaW5nLWxpc3Qge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIHBhZGRpbmctbGVmdDogMDtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICBsaSB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogMzcwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uaW50cm8tbGlzdCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyNHB4O1xyXG4gICAgYmFja2dyb3VuZDogJHJlZC1jb2xvcjtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgaDQge1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMjdweDtcclxuICAgICAgICBtYXJnaW46IDE3cHggMCAwO1xyXG4gICAgICAgIGZvbnQ6IDIycHggJ09zd2FsZCcsIHNhbnMtc2VyaWY7XHJcbiAgICB9XHJcbiAgICBzcGFuIHtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDI3cHg7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDI0cHg7XHJcbiAgICAgICAgZm9udDogMTZweCAnRHJvaWQgU2FucycsIHNhbnMtc2VyaWY7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zb2NpYWwtbGlzdC5zb2NpYWwtaGlkZSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyN3B4O1xyXG4gICAgbGkge1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiAyM3B4O1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5pbnRyby1saXN0OmhvdmVyIC5zb2NpYWwtbGlzdCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmxpbmU6OmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxcHg7XHJcbiAgICBtYXJnaW46IDEwMHB4IGF1dG8gMDtcclxuICAgIGJhY2tncm91bmQ6ICNkZmRmZGY7XHJcbn1cclxuXHJcbi8qLS0tLS0tLS0tLS0tLS11cGNvbWluZy0tLS0tLS0tLS0qL1xyXG5cclxuLnVwY29taW5nLCAubGF0ZXN0IHtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxMDBweDtcclxufVxyXG5cclxuLmNvbmNlcnQtZGF0ZSB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIG1hcmdpbi1yaWdodDogODBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGltZyB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAyNzBweDtcclxuICAgIH1cclxuICAgIC5ob3Zlci1kYXRlIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgLndyYXAtc3BhbiB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICBzcGFuIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgZm9udDogNTAwIDMycHggJ09zd2FsZCcsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4ubG9jYXRpb24ge1xyXG4gICAgaDUge1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBwYWRkaW5nOiAyM3B4IDAgMDtcclxuICAgICAgICBmb250OiA1MDAgMjJweCAnT3N3YWxkJywgc2Fucy1zZXJpZjtcclxuICAgIH1cclxuICAgIGRsIHtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICAgIH1cclxufVxyXG5cclxuLmNvbmNlcnQge1xyXG4gICAgcGFkZGluZy1ib3R0b206IDVweDtcclxuICAgIGJvcmRlci1ib3R0b206IDRweCBzb2xpZCAjZGZkZmRmO1xyXG59XHJcblxyXG4vKi0tLS0tLS0tLS1sYXRlc3QtLS0tLS0tLS0tLS0tKi9cclxuXHJcbi5sYXRlc3QgLmhlYWRpbmcge1xyXG4gICAgcGFkZGluZy1ib3R0b206IDA7XHJcbn1cclxuXHJcbi8qLS0tLS0tLS0tLS0tZm91bmRlci0tLS0tLS0tLS0tLSovXHJcblxyXG4uZm91bmRlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltYWdlcy9mb3VuZGVyLnBuZycpIGNlbnRlci9jb3ZlcjtcclxuICAgIC5mb3VuZGVyLW1haW4ge1xyXG4gICAgICAgIG1heC13aWR0aDogNTU2cHg7XHJcbiAgICAgICAgcGFkZGluZzogODVweCAwIDgwcHggODBweDtcclxuICAgICAgICBoMiB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgICAgIGZvbnQ6IDUwMCAzMnB4ICdPc3dhbGQnLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIDAgNDVweDtcclxuICAgICAgICAgICAgZm9udDogMjJweCAnRHJvaWQgU2FucycsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uZm91bmRlci1tYWluIC5jYW50dXMge1xyXG4gICAgZm9udC1zaXplOiA2NXB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDAuNztcclxuICAgIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG4vKi0tLS0tLS0tLS1Tb25ncy0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4uc29uZyB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICBtYXgtaGVpZ2h0OiAxNjhweDtcclxuICAgIG1hcmdpbi10b3A6IDQzcHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgICBsaSB7XHJcbiAgICAgICAgd2lkdGg6IDE5OXB4O1xyXG4gICAgICAgIHBhZGRpbmc6IDdweCAwIDEycHg7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM5OTk5OTk7XHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIGZvbnQ6IDE2cHggJ0Ryb2lkIFNhbnMnLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICBjb2xvcjogIzMzMzMzMztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qLS0tLS0tLS0tLWluc3RhZ3JhbS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbi5pbnN0YWdyYW0ge1xyXG4gICAgcGFkZGluZy1ib3R0b206IDkwcHg7XHJcbn1cclxuXHJcbi5pbnN0YWdyYW0tbGlzdCB7XHJcbiAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICBsaSB7XHJcbiAgICAgICAgJjpudGgtY2hpbGQob2RkKSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDI5cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDI5cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaW1nIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDE3MHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiIsIi5mb3JtIHtcclxuICAgIHdpZHRoOiA1MzBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDE5cHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogNHB4IHNvbGlkICM5OTk5OTk7XHJcbiAgICBpbnB1dCB7XHJcbiAgICAgICAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xyXG4gICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICAgICAgICBhcHBlYXJlbmNlOiBub25lO1xyXG4gICAgfVxyXG59XHJcblxyXG4uZW1haWwge1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgZm9udDogMTZweCAnRHJvaWQgU2FucycsIHNhbnMtc2VyaWY7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogbG93ZXJjYXNlO1xyXG59XHJcblxyXG4uZW1haWw6Oi1tb3otcGxhY2Vob2xkZXIge1xyXG4gICAgY29sb3I6ICMyODI4Mjg7XHJcbn1cclxuXHJcbi5lbWFpbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcntcclxuICAgIGNvbG9yOiAjMjgyODI4O1xyXG59XHJcblxyXG4uZW1haWw6OnBsYWNlaG9sZGVyIHtcclxuICAgIGNvbG9yOiAjMjgyODI4O1xyXG59XHJcblxyXG4uc2VuZHN1Ym1pdCB7XHJcbiAgICB3aWR0aDogMTRweDtcclxuICAgIGhlaWdodDogMTRweDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltYWdlcy9hcnJvdy5wbmcnKSBuby1yZXBlYXQgY2VudGVyIHRvcDtcclxuICAgIHRleHQtaW5kZW50OiAtMTAwMGVtO1xyXG59IiwiLmZvb3RlciB7XHJcbiAgICBwYWRkaW5nOiA2OXB4IDAgOTBweDtcclxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZGZkZmRmO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgLm1haW4tbmF2IHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBhIHtcclxuICAgICAgICAgICAgY29sb3I6ICMzMzMzMzM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcCB7XHJcbiAgICAgICAgZm9udDogMTNweCAnRHJvaWQgU2FucycsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgY29sb3I6ICRoMi1jb2xvcjtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMC42NXB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4vKi0tLS0tLS0tLS1mb3JtLS0tLS0tLS0tLS0tLS0qL1xyXG4uc3Vic2NyaWJlIHtcclxuICAgIHBhZGRpbmc6IDEwMHB4IDAgNzBweDtcclxufVxyXG5cclxuLyotLS0tLS0tLS0tZG93bmxvYWQtLS0tLS0tLS0tLS0tLS0qL1xyXG4uZG93bmxvYWQge1xyXG4gICAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWFnZXMvZG93bmxvYWQucG5nJykgY2VudGVyL2NvdmVyO1xyXG4gICAgLmRvd25sb2FkLW1haW4ge1xyXG4gICAgICAgIHBhZGRpbmc6IDgwcHggMCAxMDBweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgaDIge1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgIGZvbnQ6IDUwMCAzMnB4ICdPc3dhbGQnLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcCB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogOXB4IDAgNDBweDtcclxuICAgICAgICAgICAgZm9udDogMjJweCAnRHJvaWQgU2FucycsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uZG93bmxvYWQtbGlzdCB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgbGkge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAmOmZpcnN0LWNoaWxkIHtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDE2MnB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUsyQ0UsaUVBQWlFLEFBWS9ELEFBQUEsSUFBSSxBQUFDLENBY0QsV0FBVyxDQUFFLElBQUksQ0FFbkIsb0JBQW9CLENBQUUsSUFBSSxDQUMx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 */
