/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}@font-face{font-family:'Droid Sans';src:url("../fonts/DroidSans-Bold-webfont.eot");src:url("../fonts/DroidSans-Bold-webfont.eot?#iefix") format("embedded-opentype"),url("../fonts/DroidSans-Bold-webfont.woff2") format("woff2"),url("../fonts/DroidSans-Bold-webfont.woff") format("woff"),url("../fonts/DroidSans-Bold-webfont.ttf") format("truetype"),url("../fonts/DroidSans-Bold-webfont.svg#droid_sansbold") format("svg");font-weight:700;font-style:normal}@font-face{font-family:'Droid Sans';src:url("../fonts/DroidSans-webfont.eot");src:url("../fonts/DroidSans-webfont.eot?#iefix") format("embedded-opentype"),url("../fonts/DroidSans-webfont.woff2") format("woff2"),url("../fonts/DroidSans-webfont.woff") format("woff"),url("../fonts/DroidSans-webfont.ttf") format("truetype"),url("../fonts/DroidSans-webfont.svg#droid_sansregular") format("svg");font-weight:400;font-style:normal}.clearfix:after{display:block;content:"";clear:both}img{width:100%;height:auto;vertical-align:middle}a{text-decoration:none}.heading{padding-bottom:45px}.heading h2{font:32px 'Oswald', sans-serif;text-transform:uppercase;color:#333}.heading span{display:block;margin-bottom:0;font:32px 'Great Vibes', cursive;text-transform:capitalize;color:#df001f;line-height:0.7}.cantus{font:28px 'Great Vibes', cursive;color:#df001f}.button{padding:21px 44px 20px;border-radius:50px;font:700 12px 'Droid Sans', sans-serif;text-transform:uppercase}.white-button{background:#fff;color:#df001f}.red-button{background:#df001f;color:#fff}.white-button:hover,.red-button:hover{background:#9e3c4a;color:#fff;transition:all 0.5s ease}.arrow{margin-top:0;margin-bottom:10px;padding-left:0;list-style:none;text-align:right}.arrow li{display:inline-flex;align-items:center;width:35px;height:35px;background:#df001f;color:#fff}.arrow li:hover{background:#9e3c4a;transition:all 0.5s ease}.arrow li .fa-angle-right,.arrow li .fa-angle-left{margin:0 auto;font-size:24px}.container{max-width:1200px;width:100%;margin:0 auto;padding:0 15px}.pull-left{float:left;width:65.81197%;padding-top:100px}.pull-right{float:right;width:31.62393%;padding-top:100px}header{padding:11px 0 13px;background:#df001f}header nav{display:flex;justify-content:space-between;align-items:center;padding:0 50px}header img{text-align:center}.main-nav,.header-social{padding-left:0;list-style:none}.header-social{display:flex}.main-nav li,.social-list li{display:inline-block}.main-nav li a,.social-list li a{text-transform:uppercase;color:#fff}.main-nav li a:hover,.social-list li a:hover{transition:all 0.5s ease}.main-nav li{position:relative;margin:0 2px;padding:0 18px}.main-nav li:before{position:absolute;display:none;content:'';width:100%;height:1px;left:0;top:50%;background:#fff;opacity:0.5}.main-nav li:hover:before{display:block}.main-nav li a{font:700 13px 'Droid Sans', sans-serif;position:relative}.social-list{padding-left:0}.social-list li{padding-right:45px}.social-list li a{font:14px 'Droid Sans', sans-serif}.social-list li a:before{font-family:FontAwesome;font-size:24px;color:#fff}.social-list li a:hover{color:#9e3c4a;transition:all 0.5s ease}.facebook a:before{padding-right:15px;content:"\f09a"}.facebook a:hover:before{padding-right:15px;content:"\f09a";color:#9e3c4a;transition:all 0.5s ease}.twitter a:before{padding-right:10px;content:"\f099"}.twitter a:hover:before{padding-right:10px;content:"\f099";color:#9e3c4a;transition:all 0.5s ease}.google a:before{padding-right:10px;content:"\f0d5"}.google a:hover:before{padding-right:10px;content:"\f0d5";color:#9e3c4a;transition:all 0.5s ease}.welcome-banner{position:relative;padding:100px 0;background:url("../images/welcome.png") center/cover;text-align:center;border-bottom:3px solid #d3d3d3}.welcome-banner:after{content:'';display:block;width:80%;background:#df001f;height:3px;position:absolute;margin-top:100px}.welcome-heading{padding:80px 0 74px}.welcome-heading h1{margin-top:0;font:700 116px/1 'Oswald', sans-serif;text-transform:uppercase;color:#df001f}.welcome-heading-bottom{display:block}.welcome-heading-bottom{font:80px 'Great Vibes', cursive;text-transform:capitalize;color:#333}.introducing{padding-top:100px}.introducing .heading{padding-bottom:0}.introducing-list{padding:0;list-style:none}.introducing-list li{position:relative;margin:0 15px}.introducing-list li img{max-height:503px}.intro-list{width:100%;position:absolute;padding-bottom:24px;background:#df001f;bottom:0;color:#fff}.intro-list h4{padding-left:27px;margin:17px 0 0;font:22px 'Oswald', sans-serif}.intro-list span{padding-left:27px;padding-bottom:24px;font:16px 'Droid Sans', sans-serif}.social-list.social-hide{display:none;padding-left:27px}.social-list.social-hide li{padding-top:23px;padding-right:15px}.intro-list:hover .social-list{display:block}.line::after{content:"";display:block;width:100%;height:1px;margin:100px auto 0;background:#dfdfdf}.upcoming,.latest{padding-bottom:100px}.concert-date{float:left;height:auto;margin-right:80px;position:relative}.concert-date img{max-width:270px}.concert-date .hover-date{position:absolute;width:100%;top:0;bottom:0;display:flex;align-items:center}.concert-date .hover-date .wrap-span{display:block;margin:0 auto;text-align:center}.concert-date .hover-date .wrap-span span{display:block;font:500 32px 'Oswald', sans-serif;color:#fff;line-height:1}.location h5{margin:0;padding:23px 0 33px;font:500 22px 'Oswald', sans-serif;line-height:1}.location dl{margin:0;padding-bottom:30px}.location dl dt{float:left}.location dl dt span{padding:0 15px 0 35px}.location dl dt:first-child span{padding:0 12px 0 10px}.location dl dd{padding-bottom:10px}.concert{padding-bottom:5px;border-bottom:4px solid #dfdfdf}.latest .heading{padding-bottom:0}.founder{background:url("../images/founder.png") center/cover}.founder .founder-main{max-width:556px;padding:85px 0 80px 80px;color:#fff}.founder .founder-main h2{margin-bottom:0;font:500 32px 'Oswald', sans-serif;text-transform:uppercase}.founder .founder-main p{margin:0 0 45px;font:22px 'Droid Sans', sans-serif}.founder-main .cantus{font-size:65px;line-height:0.7;color:#fff}.pop-up-show{display:none;position:fixed;top:0;right:0;left:0;bottom:0;background:rgba(118,100,101,0.6)}.pop-up{position:absolute;top:20%;left:30%;width:600px;height:300px;padding:40px;border:7px #df001f double;background:#fff;color:#000}.pop-up h4{font:500 25px 'Oswald', sans-serif}.show{display:block}.song{list-style:none;columns:3;margin-top:42px;padding-left:0}.song li{width:199px;padding:7px 0 12px;border-bottom:1px solid #999999}.song li a{font:16px 'Droid Sans', sans-serif;color:#333333}.song li a:hover{color:#df001f}.instagram{padding-bottom:90px}.instagram-list{margin-top:0;padding-left:0;list-style:none;display:flex;flex-wrap:wrap}.instagram-list li:nth-child(odd){padding-right:29px}.instagram-list li:nth-child(2){padding-bottom:29px}.instagram-list img{max-width:170px}.download{background:url("../images/download.png") center/cover}.download .download-main{padding:80px 0 100px;text-align:center;color:#fff}.download .download-main h2{margin:0;font:500 32px 'Oswald', sans-serif;text-transform:capitalize}.download .download-main p{margin:9px 0 40px;font:22px 'Droid Sans', sans-serif}.download-list{padding-left:0;list-style:none}.download-list li{display:inline-block}.download-list li:first-child{margin-right:10px}.download-list li img{max-width:162px}.download-list li img:hover{opacity:0.7}.subscribe{padding:100px 0 70px}.form{width:530px;margin:0 auto;padding-bottom:19px;display:flex;justify-content:space-between;border-bottom:4px solid #999999}.form input{-moz-appearance:none;-webkit-appearance:none;appearence:none}.email{border:none;font:16px 'Droid Sans', sans-serif;text-transform:lowercase}.email::-moz-placeholder{color:#282828}.email::-webkit-input-placeholder{color:#282828}.email::placeholder{color:#282828}.sendsubmit{width:14px;height:14px;margin:0;padding:0;border:0;background:url("../images/arrow.png") no-repeat center top;text-indent:-1000em}.sendsubmit:hover{cursor:pointer}.footer{padding:69px 0 90px;border-top:1px solid #dfdfdf;text-align:center}.footer .main-nav{display:block}.footer .main-nav li:before{background:#df001f}.footer .main-nav a{color:#333333}.footer .main-nav a:hover{color:#df001f}.footer p{font:13px 'Droid Sans', sans-serif;color:#333;letter-spacing:0.65px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
